void BalancedBrackets(String strIP)
{
	//str = {  {{}} }
	str = List();
	str = strIP.toList("");
	brackets = {"(",")", "{", "}", "[", "]"};
	newStr = List();
	
// 	info str;
	pos = 0;
	status =1;
	if(strIP.length()%2==0){
		
	
	for each index i in str{
		if(i<str.size()){
			// 		info i+ "  heck "+ str.get(i);
		if(brackets.contains(str.get(i))){
			info "index "+ brackets.indexOf(str.get(i));
			if(brackets.indexOf(str.get(i))%2==0){
				newStr.add(str.get(i));
				info newStr;
				pos = pos +1;
			}else if(brackets.indexOf(str.get(i))%2!=0){
				value = i-1;
				if(value >=0){
					info "i-1 value = "+ brackets.indexOf(str.get(value)) + " i value "+brackets.indexOf(str.get(i));
					info "str.get(i-1) " + str.get(value) + " str.get(i) "+ str.get(i);
					info "i-1 "+ value + " i "+ i;
					if(brackets.indexOf(newStr.get(pos-1))== brackets.indexOf(str.get(i))-1){
						
						newStr.remove(pos-1);
						
						info newStr;
						pos = pos-1;	
					}else{
						status = 0;
						info "Unbalanced";
						break;
					}
				}
			}
			
		}
		}

	
// 	info "Length "+ str.size(); 
}
if(status != 0){
	info "Balanced";
}
}else{
	info "Unbalanced";
}
}
